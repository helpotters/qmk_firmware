   1               		.file	"action_util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.add_key,"ax",@progbits
  11               	.global	add_key
  13               	add_key:
  14               	.LVL0:
  15               	.LFB3:
  16               		.file 1 "quantum/action_util.h"
   1:quantum/action_util.h **** /*
   2:quantum/action_util.h **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.h **** 
   4:quantum/action_util.h **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.h **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.h **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.h **** (at your option) any later version.
   8:quantum/action_util.h **** 
   9:quantum/action_util.h **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.h **** GNU General Public License for more details.
  13:quantum/action_util.h **** 
  14:quantum/action_util.h **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.h **** */
  17:quantum/action_util.h **** 
  18:quantum/action_util.h **** #pragma once
  19:quantum/action_util.h **** 
  20:quantum/action_util.h **** #include <stdint.h>
  21:quantum/action_util.h **** #include "report.h"
  22:quantum/action_util.h **** 
  23:quantum/action_util.h **** #ifdef __cplusplus
  24:quantum/action_util.h **** extern "C" {
  25:quantum/action_util.h **** #endif
  26:quantum/action_util.h **** 
  27:quantum/action_util.h **** extern report_keyboard_t *keyboard_report;
  28:quantum/action_util.h **** 
  29:quantum/action_util.h **** void send_keyboard_report(void);
  30:quantum/action_util.h **** 
  31:quantum/action_util.h **** /* key */
  32:quantum/action_util.h **** inline void add_key(uint8_t key) { add_key_to_report(keyboard_report, key); }
  17               		.loc 1 32 34 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 32 34 is_stmt 0 view .LVU1
  24 0000 682F      		mov r22,r24
  25               		.loc 1 32 36 is_stmt 1 view .LVU2
  26 0002 8091 0000 		lds r24,keyboard_report
  27 0006 9091 0000 		lds r25,keyboard_report+1
  28               	.LVL1:
  29               		.loc 1 32 36 is_stmt 0 view .LVU3
  30 000a 0C94 0000 		jmp add_key_to_report
  31               	.LVL2:
  32               		.loc 1 32 36 view .LVU4
  33               		.cfi_endproc
  34               	.LFE3:
  36               		.section	.text.del_key,"ax",@progbits
  37               	.global	del_key
  39               	del_key:
  40               	.LVL3:
  41               	.LFB4:
  33:quantum/action_util.h **** 
  34:quantum/action_util.h **** inline void del_key(uint8_t key) { del_key_from_report(keyboard_report, key); }
  42               		.loc 1 34 34 is_stmt 1 view -0
  43               		.cfi_startproc
  44               	/* prologue: function */
  45               	/* frame size = 0 */
  46               	/* stack size = 0 */
  47               	.L__stack_usage = 0
  48               		.loc 1 34 34 is_stmt 0 view .LVU6
  49 0000 682F      		mov r22,r24
  50               		.loc 1 34 36 is_stmt 1 view .LVU7
  51 0002 8091 0000 		lds r24,keyboard_report
  52 0006 9091 0000 		lds r25,keyboard_report+1
  53               	.LVL4:
  54               		.loc 1 34 36 is_stmt 0 view .LVU8
  55 000a 0C94 0000 		jmp del_key_from_report
  56               	.LVL5:
  57               		.loc 1 34 36 view .LVU9
  58               		.cfi_endproc
  59               	.LFE4:
  61               		.section	.text.clear_keys,"ax",@progbits
  62               	.global	clear_keys
  64               	clear_keys:
  65               	.LFB5:
  35:quantum/action_util.h **** 
  36:quantum/action_util.h **** inline void clear_keys(void) { clear_keys_from_report(keyboard_report); }
  66               		.loc 1 36 30 is_stmt 1 view -0
  67               		.cfi_startproc
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 0 */
  71               	.L__stack_usage = 0
  72               		.loc 1 36 32 view .LVU11
  73 0000 8091 0000 		lds r24,keyboard_report
  74 0004 9091 0000 		lds r25,keyboard_report+1
  75 0008 0C94 0000 		jmp clear_keys_from_report
  76               	.LVL6:
  77               		.cfi_endproc
  78               	.LFE5:
  80               		.section	.text.get_oneshot_locked_mods,"ax",@progbits
  81               	.global	get_oneshot_locked_mods
  83               	get_oneshot_locked_mods:
  84               	.LFB11:
  85               		.file 2 "quantum/action_util.c"
   1:quantum/action_util.c **** /*
   2:quantum/action_util.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:quantum/action_util.c **** 
   4:quantum/action_util.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/action_util.c **** it under the terms of the GNU General Public License as published by
   6:quantum/action_util.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/action_util.c **** (at your option) any later version.
   8:quantum/action_util.c **** 
   9:quantum/action_util.c **** This program is distributed in the hope that it will be useful,
  10:quantum/action_util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/action_util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/action_util.c **** GNU General Public License for more details.
  13:quantum/action_util.c **** 
  14:quantum/action_util.c **** You should have received a copy of the GNU General Public License
  15:quantum/action_util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/action_util.c **** */
  17:quantum/action_util.c **** #include "host.h"
  18:quantum/action_util.c **** #include "report.h"
  19:quantum/action_util.c **** #include "debug.h"
  20:quantum/action_util.c **** #include "action_util.h"
  21:quantum/action_util.c **** #include "action_layer.h"
  22:quantum/action_util.c **** #include "timer.h"
  23:quantum/action_util.c **** #include "keycode_config.h"
  24:quantum/action_util.c **** 
  25:quantum/action_util.c **** extern keymap_config_t keymap_config;
  26:quantum/action_util.c **** 
  27:quantum/action_util.c **** static uint8_t real_mods  = 0;
  28:quantum/action_util.c **** static uint8_t weak_mods  = 0;
  29:quantum/action_util.c **** static uint8_t macro_mods = 0;
  30:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
  31:quantum/action_util.c **** static uint8_t weak_override_mods = 0;
  32:quantum/action_util.c **** static uint8_t suppressed_mods    = 0;
  33:quantum/action_util.c **** #endif
  34:quantum/action_util.c **** 
  35:quantum/action_util.c **** #ifdef USB_6KRO_ENABLE
  36:quantum/action_util.c **** #    define RO_ADD(a, b) ((a + b) % KEYBOARD_REPORT_KEYS)
  37:quantum/action_util.c **** #    define RO_SUB(a, b) ((a - b + KEYBOARD_REPORT_KEYS) % KEYBOARD_REPORT_KEYS)
  38:quantum/action_util.c **** #    define RO_INC(a) RO_ADD(a, 1)
  39:quantum/action_util.c **** #    define RO_DEC(a) RO_SUB(a, 1)
  40:quantum/action_util.c **** static int8_t cb_head  = 0;
  41:quantum/action_util.c **** static int8_t cb_tail  = 0;
  42:quantum/action_util.c **** static int8_t cb_count = 0;
  43:quantum/action_util.c **** #endif
  44:quantum/action_util.c **** 
  45:quantum/action_util.c **** // TODO: pointer variable is not needed
  46:quantum/action_util.c **** // report_keyboard_t keyboard_report = {};
  47:quantum/action_util.c **** report_keyboard_t *keyboard_report = &(report_keyboard_t){};
  48:quantum/action_util.c **** 
  49:quantum/action_util.c **** extern inline void add_key(uint8_t key);
  50:quantum/action_util.c **** extern inline void del_key(uint8_t key);
  51:quantum/action_util.c **** extern inline void clear_keys(void);
  52:quantum/action_util.c **** 
  53:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  54:quantum/action_util.c **** static uint8_t oneshot_mods        = 0;
  55:quantum/action_util.c **** static uint8_t oneshot_locked_mods = 0;
  56:quantum/action_util.c **** uint8_t        get_oneshot_locked_mods(void) { return oneshot_locked_mods; }
  86               		.loc 2 56 46 view -0
  87               		.cfi_startproc
  88               	/* prologue: function */
  89               	/* frame size = 0 */
  90               	/* stack size = 0 */
  91               	.L__stack_usage = 0
  92               		.loc 2 56 48 view .LVU13
  93               		.loc 2 56 76 is_stmt 0 view .LVU14
  94 0000 8091 0000 		lds r24,oneshot_locked_mods
  95               	/* epilogue start */
  96 0004 0895      		ret
  97               		.cfi_endproc
  98               	.LFE11:
 100               		.section	.text.has_oneshot_mods_timed_out,"ax",@progbits
 101               	.global	has_oneshot_mods_timed_out
 103               	has_oneshot_mods_timed_out:
 104               	.LFB14:
  57:quantum/action_util.c **** void           set_oneshot_locked_mods(uint8_t mods) {
  58:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
  59:quantum/action_util.c ****         oneshot_locked_mods = mods;
  60:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  61:quantum/action_util.c ****     }
  62:quantum/action_util.c **** }
  63:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
  64:quantum/action_util.c ****     if (oneshot_locked_mods) {
  65:quantum/action_util.c ****         oneshot_locked_mods = 0;
  66:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  67:quantum/action_util.c ****     }
  68:quantum/action_util.c **** }
  69:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  70:quantum/action_util.c **** static uint16_t oneshot_time = 0;
  71:quantum/action_util.c **** bool            has_oneshot_mods_timed_out(void) { return TIMER_DIFF_16(timer_read(), oneshot_time)
  72:quantum/action_util.c **** #    else
  73:quantum/action_util.c **** bool has_oneshot_mods_timed_out(void) { return false; }
 105               		.loc 2 73 39 is_stmt 1 view -0
 106               		.cfi_startproc
 107               	/* prologue: function */
 108               	/* frame size = 0 */
 109               	/* stack size = 0 */
 110               	.L__stack_usage = 0
 111               		.loc 2 73 41 view .LVU16
 112               		.loc 2 73 55 is_stmt 0 view .LVU17
 113 0000 80E0      		ldi r24,0
 114               	/* epilogue start */
 115 0002 0895      		ret
 116               		.cfi_endproc
 117               	.LFE14:
 119               		.section	.text.get_oneshot_layer,"ax",@progbits
 120               	.global	get_oneshot_layer
 122               	get_oneshot_layer:
 123               	.LFB15:
  74:quantum/action_util.c **** #    endif
  75:quantum/action_util.c **** #endif
  76:quantum/action_util.c **** 
  77:quantum/action_util.c **** /* oneshot layer */
  78:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
  79:quantum/action_util.c **** /** \brief oneshot_layer_data bits
  80:quantum/action_util.c ****  * LLLL LSSS
  81:quantum/action_util.c ****  * where:
  82:quantum/action_util.c ****  *   L => are layer bits
  83:quantum/action_util.c ****  *   S => oneshot state bits
  84:quantum/action_util.c ****  */
  85:quantum/action_util.c **** static int8_t oneshot_layer_data = 0;
  86:quantum/action_util.c **** 
  87:quantum/action_util.c **** inline uint8_t get_oneshot_layer(void) { return oneshot_layer_data >> 3; }
 124               		.loc 2 87 40 is_stmt 1 view -0
 125               		.cfi_startproc
 126               	/* prologue: function */
 127               	/* frame size = 0 */
 128               	/* stack size = 0 */
 129               	.L__stack_usage = 0
 130               		.loc 2 87 42 view .LVU19
 131               		.loc 2 87 68 is_stmt 0 view .LVU20
 132 0000 8091 0000 		lds r24,oneshot_layer_data
 133               		.loc 2 87 74 view .LVU21
 134 0004 8595      		asr r24
 135 0006 8595      		asr r24
 136 0008 8595      		asr r24
 137               	/* epilogue start */
 138 000a 0895      		ret
 139               		.cfi_endproc
 140               	.LFE15:
 142               		.section	.text.get_oneshot_layer_state,"ax",@progbits
 143               	.global	get_oneshot_layer_state
 145               	get_oneshot_layer_state:
 146               	.LFB16:
  88:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 147               		.loc 2 88 46 is_stmt 1 view -0
 148               		.cfi_startproc
 149               	/* prologue: function */
 150               	/* frame size = 0 */
 151               	/* stack size = 0 */
 152               	.L__stack_usage = 0
 153               		.loc 2 88 48 view .LVU23
 154               		.loc 2 88 74 is_stmt 0 view .LVU24
 155 0000 8091 0000 		lds r24,oneshot_layer_data
 156               		.loc 2 88 83 view .LVU25
 157 0004 8770      		andi r24,lo8(7)
 158               	/* epilogue start */
 159 0006 0895      		ret
 160               		.cfi_endproc
 161               	.LFE16:
 163               		.section	.text.set_oneshot_swaphands,"ax",@progbits
 164               	.global	set_oneshot_swaphands
 166               	set_oneshot_swaphands:
 167               	.LFB17:
  89:quantum/action_util.c **** 
  90:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  91:quantum/action_util.c **** enum {
  92:quantum/action_util.c ****     SHO_OFF,
  93:quantum/action_util.c ****     SHO_ACTIVE,   // Swap hands button was pressed, and we didn't send any swapped keys yet
  94:quantum/action_util.c ****     SHO_PRESSED,  // Swap hands button is currently pressed
  95:quantum/action_util.c ****     SHO_USED,     // Swap hands button is still pressed, and we already sent swapped keys
  96:quantum/action_util.c **** } swap_hands_oneshot = SHO_OFF;
  97:quantum/action_util.c **** #    endif
  98:quantum/action_util.c **** 
  99:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 100:quantum/action_util.c **** static uint16_t oneshot_layer_time = 0;
 101:quantum/action_util.c **** inline bool     has_oneshot_layer_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_layer_ti
 102:quantum/action_util.c **** #        ifdef SWAP_HANDS_ENABLE
 103:quantum/action_util.c **** static uint16_t oneshot_swaphands_time = 0;
 104:quantum/action_util.c **** inline bool     has_oneshot_swaphands_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_swap
 105:quantum/action_util.c **** #        endif
 106:quantum/action_util.c **** #    endif
 107:quantum/action_util.c **** 
 108:quantum/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
 109:quantum/action_util.c **** 
 110:quantum/action_util.c **** void set_oneshot_swaphands(void) {
 168               		.loc 2 110 34 is_stmt 1 view -0
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 111:quantum/action_util.c ****     swap_hands_oneshot = SHO_PRESSED;
 174               		.loc 2 111 5 view .LVU27
 175               		.loc 2 111 24 is_stmt 0 view .LVU28
 176 0000 82E0      		ldi r24,lo8(2)
 177 0002 8093 0000 		sts swap_hands_oneshot,r24
 112:quantum/action_util.c ****     swap_hands         = true;
 178               		.loc 2 112 5 is_stmt 1 view .LVU29
 179               		.loc 2 112 24 is_stmt 0 view .LVU30
 180 0006 81E0      		ldi r24,lo8(1)
 181 0008 8093 0000 		sts swap_hands,r24
 182               	/* epilogue start */
 113:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 114:quantum/action_util.c ****     oneshot_swaphands_time = timer_read();
 115:quantum/action_util.c ****     if (oneshot_layer_time != 0) {
 116:quantum/action_util.c ****         oneshot_layer_time = oneshot_swaphands_time;
 117:quantum/action_util.c ****     }
 118:quantum/action_util.c **** #        endif
 119:quantum/action_util.c **** }
 183               		.loc 2 119 1 view .LVU31
 184 000c 0895      		ret
 185               		.cfi_endproc
 186               	.LFE17:
 188               		.section	.text.clear_oneshot_swaphands,"ax",@progbits
 189               	.global	clear_oneshot_swaphands
 191               	clear_oneshot_swaphands:
 192               	.LFB20:
 120:quantum/action_util.c **** 
 121:quantum/action_util.c **** void release_oneshot_swaphands(void) {
 122:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 123:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 124:quantum/action_util.c ****     }
 125:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_USED) {
 126:quantum/action_util.c ****         clear_oneshot_swaphands();
 127:quantum/action_util.c ****     }
 128:quantum/action_util.c **** }
 129:quantum/action_util.c **** 
 130:quantum/action_util.c **** void use_oneshot_swaphands(void) {
 131:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 132:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 133:quantum/action_util.c ****     }
 134:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_ACTIVE) {
 135:quantum/action_util.c ****         clear_oneshot_swaphands();
 136:quantum/action_util.c ****     }
 137:quantum/action_util.c **** }
 138:quantum/action_util.c **** 
 139:quantum/action_util.c **** void clear_oneshot_swaphands(void) {
 193               		.loc 2 139 36 is_stmt 1 view -0
 194               		.cfi_startproc
 195               	/* prologue: function */
 196               	/* frame size = 0 */
 197               	/* stack size = 0 */
 198               	.L__stack_usage = 0
 140:quantum/action_util.c ****     swap_hands_oneshot = SHO_OFF;
 199               		.loc 2 140 5 view .LVU33
 200               		.loc 2 140 24 is_stmt 0 view .LVU34
 201 0000 1092 0000 		sts swap_hands_oneshot,__zero_reg__
 141:quantum/action_util.c ****     swap_hands         = false;
 202               		.loc 2 141 5 is_stmt 1 view .LVU35
 203               		.loc 2 141 24 is_stmt 0 view .LVU36
 204 0004 1092 0000 		sts swap_hands,__zero_reg__
 205               	/* epilogue start */
 142:quantum/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 143:quantum/action_util.c ****     oneshot_swaphands_time = 0;
 144:quantum/action_util.c **** #        endif
 145:quantum/action_util.c **** }
 206               		.loc 2 145 1 view .LVU37
 207 0008 0895      		ret
 208               		.cfi_endproc
 209               	.LFE20:
 211               		.section	.text.release_oneshot_swaphands,"ax",@progbits
 212               	.global	release_oneshot_swaphands
 214               	release_oneshot_swaphands:
 215               	.LFB18:
 121:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 216               		.loc 2 121 38 is_stmt 1 view -0
 217               		.cfi_startproc
 218               	/* prologue: function */
 219               	/* frame size = 0 */
 220               	/* stack size = 0 */
 221               	.L__stack_usage = 0
 122:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 222               		.loc 2 122 5 view .LVU39
 122:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 223               		.loc 2 122 28 is_stmt 0 view .LVU40
 224 0000 8091 0000 		lds r24,swap_hands_oneshot
 122:quantum/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 225               		.loc 2 122 8 view .LVU41
 226 0004 8230      		cpi r24,lo8(2)
 227 0006 01F4      		brne .L11
 123:quantum/action_util.c ****     }
 228               		.loc 2 123 9 is_stmt 1 view .LVU42
 123:quantum/action_util.c ****     }
 229               		.loc 2 123 28 is_stmt 0 view .LVU43
 230 0008 81E0      		ldi r24,lo8(1)
 231 000a 8093 0000 		sts swap_hands_oneshot,r24
 125:quantum/action_util.c ****         clear_oneshot_swaphands();
 232               		.loc 2 125 5 is_stmt 1 view .LVU44
 233 000e 0895      		ret
 234               	.L11:
 125:quantum/action_util.c ****         clear_oneshot_swaphands();
 235               		.loc 2 125 5 view .LVU45
 125:quantum/action_util.c ****         clear_oneshot_swaphands();
 236               		.loc 2 125 8 is_stmt 0 view .LVU46
 237 0010 8330      		cpi r24,lo8(3)
 238 0012 01F4      		brne .L10
 126:quantum/action_util.c ****     }
 239               		.loc 2 126 9 is_stmt 1 view .LVU47
 240 0014 0C94 0000 		jmp clear_oneshot_swaphands
 241               	.LVL7:
 242               	.L10:
 243               	/* epilogue start */
 128:quantum/action_util.c **** 
 244               		.loc 2 128 1 is_stmt 0 view .LVU48
 245 0018 0895      		ret
 246               		.cfi_endproc
 247               	.LFE18:
 249               		.section	.text.use_oneshot_swaphands,"ax",@progbits
 250               	.global	use_oneshot_swaphands
 252               	use_oneshot_swaphands:
 253               	.LFB19:
 130:quantum/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 254               		.loc 2 130 34 is_stmt 1 view -0
 255               		.cfi_startproc
 256               	/* prologue: function */
 257               	/* frame size = 0 */
 258               	/* stack size = 0 */
 259               	.L__stack_usage = 0
 131:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 260               		.loc 2 131 5 view .LVU50
 131:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 261               		.loc 2 131 28 is_stmt 0 view .LVU51
 262 0000 8091 0000 		lds r24,swap_hands_oneshot
 131:quantum/action_util.c ****         swap_hands_oneshot = SHO_USED;
 263               		.loc 2 131 8 view .LVU52
 264 0004 8230      		cpi r24,lo8(2)
 265 0006 01F4      		brne .L14
 132:quantum/action_util.c ****     }
 266               		.loc 2 132 9 is_stmt 1 view .LVU53
 132:quantum/action_util.c ****     }
 267               		.loc 2 132 28 is_stmt 0 view .LVU54
 268 0008 83E0      		ldi r24,lo8(3)
 269 000a 8093 0000 		sts swap_hands_oneshot,r24
 134:quantum/action_util.c ****         clear_oneshot_swaphands();
 270               		.loc 2 134 5 is_stmt 1 view .LVU55
 271 000e 0895      		ret
 272               	.L14:
 134:quantum/action_util.c ****         clear_oneshot_swaphands();
 273               		.loc 2 134 5 view .LVU56
 134:quantum/action_util.c ****         clear_oneshot_swaphands();
 274               		.loc 2 134 8 is_stmt 0 view .LVU57
 275 0010 8130      		cpi r24,lo8(1)
 276 0012 01F4      		brne .L13
 135:quantum/action_util.c ****     }
 277               		.loc 2 135 9 is_stmt 1 view .LVU58
 278 0014 0C94 0000 		jmp clear_oneshot_swaphands
 279               	.LVL8:
 280               	.L13:
 281               	/* epilogue start */
 137:quantum/action_util.c **** 
 282               		.loc 2 137 1 is_stmt 0 view .LVU59
 283 0018 0895      		ret
 284               		.cfi_endproc
 285               	.LFE19:
 287               		.section	.text.is_oneshot_layer_active,"ax",@progbits
 288               	.global	is_oneshot_layer_active
 290               	is_oneshot_layer_active:
 291               	.LFB24:
 146:quantum/action_util.c **** 
 147:quantum/action_util.c **** #    endif
 148:quantum/action_util.c **** 
 149:quantum/action_util.c **** /** \brief Set oneshot layer
 150:quantum/action_util.c ****  *
 151:quantum/action_util.c ****  * FIXME: needs doc
 152:quantum/action_util.c ****  */
 153:quantum/action_util.c **** void set_oneshot_layer(uint8_t layer, uint8_t state) {
 154:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 155:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 156:quantum/action_util.c ****         layer_on(layer);
 157:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 158:quantum/action_util.c ****         oneshot_layer_time = timer_read();
 159:quantum/action_util.c **** #    endif
 160:quantum/action_util.c ****         oneshot_layer_changed_kb(get_oneshot_layer());
 161:quantum/action_util.c ****     } else {
 162:quantum/action_util.c ****         layer_on(layer);
 163:quantum/action_util.c ****     }
 164:quantum/action_util.c **** }
 165:quantum/action_util.c **** /** \brief Reset oneshot layer
 166:quantum/action_util.c ****  *
 167:quantum/action_util.c ****  * FIXME: needs doc
 168:quantum/action_util.c ****  */
 169:quantum/action_util.c **** void reset_oneshot_layer(void) {
 170:quantum/action_util.c ****     oneshot_layer_data = 0;
 171:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 172:quantum/action_util.c ****     oneshot_layer_time = 0;
 173:quantum/action_util.c **** #    endif
 174:quantum/action_util.c ****     oneshot_layer_changed_kb(get_oneshot_layer());
 175:quantum/action_util.c **** }
 176:quantum/action_util.c **** /** \brief Clear oneshot layer
 177:quantum/action_util.c ****  *
 178:quantum/action_util.c ****  * FIXME: needs doc
 179:quantum/action_util.c ****  */
 180:quantum/action_util.c **** void clear_oneshot_layer_state(oneshot_fullfillment_t state) {
 181:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 182:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 183:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 184:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 185:quantum/action_util.c ****         reset_oneshot_layer();
 186:quantum/action_util.c ****     }
 187:quantum/action_util.c **** }
 188:quantum/action_util.c **** /** \brief Is oneshot layer active
 189:quantum/action_util.c ****  *
 190:quantum/action_util.c ****  * FIXME: needs doc
 191:quantum/action_util.c ****  */
 192:quantum/action_util.c **** bool is_oneshot_layer_active(void) { return get_oneshot_layer_state(); }
 292               		.loc 2 192 36 is_stmt 1 view -0
 293               		.cfi_startproc
 294               	/* prologue: function */
 295               	/* frame size = 0 */
 296               	/* stack size = 0 */
 297               	.L__stack_usage = 0
 298               		.loc 2 192 38 view .LVU61
 299               	.LBB12:
 300               	.LBI12:
  88:quantum/action_util.c **** 
 301               		.loc 2 88 16 view .LVU62
 302               	.LBB13:
  88:quantum/action_util.c **** 
 303               		.loc 2 88 48 view .LVU63
  88:quantum/action_util.c **** 
 304               		.loc 2 88 74 is_stmt 0 view .LVU64
 305 0000 9091 0000 		lds r25,oneshot_layer_data
 306 0004 9770      		andi r25,lo8(7)
 307               	.LBE13:
 308               	.LBE12:
 309               		.loc 2 192 45 view .LVU65
 310 0006 81E0      		ldi r24,lo8(1)
 311 0008 01F4      		brne .L17
 312 000a 80E0      		ldi r24,0
 313               	.L17:
 314               	/* epilogue start */
 315               		.loc 2 192 72 view .LVU66
 316 000c 0895      		ret
 317               		.cfi_endproc
 318               	.LFE24:
 320               		.section	.text.oneshot_set,"ax",@progbits
 321               	.global	oneshot_set
 323               	oneshot_set:
 324               	.LVL9:
 325               	.LFB25:
 193:quantum/action_util.c **** 
 194:quantum/action_util.c **** /** \brief set oneshot
 195:quantum/action_util.c ****  *
 196:quantum/action_util.c ****  * FIXME: needs doc
 197:quantum/action_util.c ****  */
 198:quantum/action_util.c **** void oneshot_set(bool active) {
 326               		.loc 2 198 31 is_stmt 1 view -0
 327               		.cfi_startproc
 328               		.loc 2 198 31 is_stmt 0 view .LVU68
 329 0000 CF93      		push r28
 330               	.LCFI0:
 331               		.cfi_def_cfa_offset 3
 332               		.cfi_offset 28, -2
 333               	/* prologue: function */
 334               	/* frame size = 0 */
 335               	/* stack size = 1 */
 336               	.L__stack_usage = 1
 337 0002 C82F      		mov r28,r24
 199:quantum/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 338               		.loc 2 199 5 is_stmt 1 view .LVU69
 339               		.loc 2 199 22 is_stmt 0 view .LVU70
 340 0004 8091 0000 		lds r24,keymap_config+1
 341               	.LVL10:
 342               		.loc 2 199 22 view .LVU71
 343 0008 82FB      		bst r24,2
 344 000a 9927      		clr r25
 345 000c 90F9      		bld r25,0
 346               		.loc 2 199 8 view .LVU72
 347 000e 9C17      		cp r25,r28
 348 0010 01F0      		breq .L18
 200:quantum/action_util.c ****         keymap_config.oneshot_disable = active;
 349               		.loc 2 200 9 is_stmt 1 view .LVU73
 350               		.loc 2 200 39 is_stmt 0 view .LVU74
 351 0012 C0FB      		bst r28,0
 352 0014 82F9      		bld r24,2
 353 0016 8093 0000 		sts keymap_config+1,r24
 201:quantum/action_util.c ****         eeconfig_update_keymap(keymap_config.raw);
 354               		.loc 2 201 9 is_stmt 1 view .LVU75
 355 001a 8091 0000 		lds r24,keymap_config
 356 001e 9091 0000 		lds r25,keymap_config+1
 357 0022 0E94 0000 		call eeconfig_update_keymap
 358               	.LVL11:
 202:quantum/action_util.c ****         dprintf("Oneshot: active: %d\n", active);
 359               		.loc 2 202 9 view .LVU76
 360               		.loc 2 202 9 view .LVU77
 361 0026 8091 0000 		lds r24,debug_config
 362 002a 80FF      		sbrs r24,0
 363 002c 00C0      		rjmp .L18
 364               		.loc 2 202 9 discriminator 1 view .LVU78
 365               	.LBB14:
 366               		.loc 2 202 9 discriminator 1 view .LVU79
 367               		.loc 2 202 9 discriminator 1 view .LVU80
 368               	.LBE14:
 369 002e 1F92      		push __zero_reg__
 370               	.LCFI1:
 371               		.cfi_def_cfa_offset 4
 372 0030 CF93      		push r28
 373               	.LCFI2:
 374               		.cfi_def_cfa_offset 5
 375 0032 80E0      		ldi r24,lo8(__c.0)
 376 0034 90E0      		ldi r25,hi8(__c.0)
 377 0036 9F93      		push r25
 378               	.LCFI3:
 379               		.cfi_def_cfa_offset 6
 380 0038 8F93      		push r24
 381               	.LCFI4:
 382               		.cfi_def_cfa_offset 7
 383 003a 0E94 0000 		call __xprintf
 384               	.LVL12:
 385 003e 0F90      		pop __tmp_reg__
 386 0040 0F90      		pop __tmp_reg__
 387 0042 0F90      		pop __tmp_reg__
 388 0044 0F90      		pop __tmp_reg__
 389               	.LCFI5:
 390               		.cfi_def_cfa_offset 3
 391               		.loc 2 202 9 discriminator 1 view .LVU81
 392               	.L18:
 393               	/* epilogue start */
 203:quantum/action_util.c ****     }
 204:quantum/action_util.c **** }
 394               		.loc 2 204 1 is_stmt 0 view .LVU82
 395 0046 CF91      		pop r28
 396               	.LVL13:
 397               		.loc 2 204 1 view .LVU83
 398 0048 0895      		ret
 399               		.cfi_endproc
 400               	.LFE25:
 402               		.section	.text.oneshot_toggle,"ax",@progbits
 403               	.global	oneshot_toggle
 405               	oneshot_toggle:
 406               	.LFB26:
 205:quantum/action_util.c **** 
 206:quantum/action_util.c **** /** \brief toggle oneshot
 207:quantum/action_util.c ****  *
 208:quantum/action_util.c ****  * FIXME: needs doc
 209:quantum/action_util.c ****  */
 210:quantum/action_util.c **** void oneshot_toggle(void) { oneshot_set(!keymap_config.oneshot_disable); }
 407               		.loc 2 210 27 is_stmt 1 view -0
 408               		.cfi_startproc
 409               	/* prologue: function */
 410               	/* frame size = 0 */
 411               	/* stack size = 0 */
 412               	.L__stack_usage = 0
 413               		.loc 2 210 29 view .LVU85
 414               		.loc 2 210 55 is_stmt 0 view .LVU86
 415 0000 8091 0000 		lds r24,keymap_config+1
 416 0004 82FB      		bst r24,2
 417 0006 8827      		clr r24
 418 0008 80F9      		bld r24,0
 419               		.loc 2 210 29 view .LVU87
 420 000a 91E0      		ldi r25,lo8(1)
 421 000c 8927      		eor r24,r25
 422 000e 0C94 0000 		jmp oneshot_set
 423               	.LVL14:
 424               		.cfi_endproc
 425               	.LFE26:
 427               		.section	.text.oneshot_enable,"ax",@progbits
 428               	.global	oneshot_enable
 430               	oneshot_enable:
 431               	.LFB27:
 211:quantum/action_util.c **** 
 212:quantum/action_util.c **** /** \brief enable oneshot
 213:quantum/action_util.c ****  *
 214:quantum/action_util.c ****  * FIXME: needs doc
 215:quantum/action_util.c ****  */
 216:quantum/action_util.c **** void oneshot_enable(void) { oneshot_set(true); }
 432               		.loc 2 216 27 is_stmt 1 view -0
 433               		.cfi_startproc
 434               	/* prologue: function */
 435               	/* frame size = 0 */
 436               	/* stack size = 0 */
 437               	.L__stack_usage = 0
 438               		.loc 2 216 29 view .LVU89
 439 0000 81E0      		ldi r24,lo8(1)
 440 0002 0C94 0000 		jmp oneshot_set
 441               	.LVL15:
 442               		.cfi_endproc
 443               	.LFE27:
 445               		.section	.text.oneshot_disable,"ax",@progbits
 446               	.global	oneshot_disable
 448               	oneshot_disable:
 449               	.LFB28:
 217:quantum/action_util.c **** 
 218:quantum/action_util.c **** /** \brief disable oneshot
 219:quantum/action_util.c ****  *
 220:quantum/action_util.c ****  * FIXME: needs doc
 221:quantum/action_util.c ****  */
 222:quantum/action_util.c **** void oneshot_disable(void) { oneshot_set(false); }
 450               		.loc 2 222 28 view -0
 451               		.cfi_startproc
 452               	/* prologue: function */
 453               	/* frame size = 0 */
 454               	/* stack size = 0 */
 455               	.L__stack_usage = 0
 456               		.loc 2 222 30 view .LVU91
 457 0000 80E0      		ldi r24,0
 458 0002 0C94 0000 		jmp oneshot_set
 459               	.LVL16:
 460               		.cfi_endproc
 461               	.LFE28:
 463               		.section	.text.is_oneshot_enabled,"ax",@progbits
 464               	.global	is_oneshot_enabled
 466               	is_oneshot_enabled:
 467               	.LFB29:
 223:quantum/action_util.c **** 
 224:quantum/action_util.c **** bool is_oneshot_enabled(void) { return keymap_config.oneshot_disable; }
 468               		.loc 2 224 31 view -0
 469               		.cfi_startproc
 470               	/* prologue: function */
 471               	/* frame size = 0 */
 472               	/* stack size = 0 */
 473               	.L__stack_usage = 0
 474               		.loc 2 224 33 view .LVU93
 475               		.loc 2 224 53 is_stmt 0 view .LVU94
 476 0000 8091 0000 		lds r24,keymap_config+1
 477               		.loc 2 224 71 view .LVU95
 478 0004 82FB      		bst r24,2
 479 0006 8827      		clr r24
 480 0008 80F9      		bld r24,0
 481               	/* epilogue start */
 482 000a 0895      		ret
 483               		.cfi_endproc
 484               	.LFE29:
 486               		.section	.text.get_mods,"ax",@progbits
 487               	.global	get_mods
 489               	get_mods:
 490               	.LFB31:
 225:quantum/action_util.c **** 
 226:quantum/action_util.c **** #endif
 227:quantum/action_util.c **** 
 228:quantum/action_util.c **** /** \brief Send keyboard report
 229:quantum/action_util.c ****  *
 230:quantum/action_util.c ****  * FIXME: needs doc
 231:quantum/action_util.c ****  */
 232:quantum/action_util.c **** void send_keyboard_report(void) {
 233:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 234:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 235:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 236:quantum/action_util.c **** 
 237:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 238:quantum/action_util.c ****     if (oneshot_mods) {
 239:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 240:quantum/action_util.c ****         if (has_oneshot_mods_timed_out()) {
 241:quantum/action_util.c ****             dprintf("Oneshot: timeout\n");
 242:quantum/action_util.c ****             clear_oneshot_mods();
 243:quantum/action_util.c ****         }
 244:quantum/action_util.c **** #    endif
 245:quantum/action_util.c ****         keyboard_report->mods |= oneshot_mods;
 246:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 247:quantum/action_util.c ****             clear_oneshot_mods();
 248:quantum/action_util.c ****         }
 249:quantum/action_util.c ****     }
 250:quantum/action_util.c **** 
 251:quantum/action_util.c **** #endif
 252:quantum/action_util.c **** 
 253:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 254:quantum/action_util.c ****     // These need to be last to be able to properly control key overrides
 255:quantum/action_util.c ****     keyboard_report->mods &= ~suppressed_mods;
 256:quantum/action_util.c ****     keyboard_report->mods |= weak_override_mods;
 257:quantum/action_util.c **** #endif
 258:quantum/action_util.c **** 
 259:quantum/action_util.c ****     host_keyboard_send(keyboard_report);
 260:quantum/action_util.c **** }
 261:quantum/action_util.c **** 
 262:quantum/action_util.c **** /** \brief Get mods
 263:quantum/action_util.c ****  *
 264:quantum/action_util.c ****  * FIXME: needs doc
 265:quantum/action_util.c ****  */
 266:quantum/action_util.c **** uint8_t get_mods(void) { return real_mods; }
 491               		.loc 2 266 24 is_stmt 1 view -0
 492               		.cfi_startproc
 493               	/* prologue: function */
 494               	/* frame size = 0 */
 495               	/* stack size = 0 */
 496               	.L__stack_usage = 0
 497               		.loc 2 266 26 view .LVU97
 498               		.loc 2 266 44 is_stmt 0 view .LVU98
 499 0000 8091 0000 		lds r24,real_mods
 500               	/* epilogue start */
 501 0004 0895      		ret
 502               		.cfi_endproc
 503               	.LFE31:
 505               		.section	.text.add_mods,"ax",@progbits
 506               	.global	add_mods
 508               	add_mods:
 509               	.LVL17:
 510               	.LFB32:
 267:quantum/action_util.c **** /** \brief add mods
 268:quantum/action_util.c ****  *
 269:quantum/action_util.c ****  * FIXME: needs doc
 270:quantum/action_util.c ****  */
 271:quantum/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 511               		.loc 2 271 29 is_stmt 1 view -0
 512               		.cfi_startproc
 513               	/* prologue: function */
 514               	/* frame size = 0 */
 515               	/* stack size = 0 */
 516               	.L__stack_usage = 0
 517               		.loc 2 271 31 view .LVU100
 518               		.loc 2 271 41 is_stmt 0 view .LVU101
 519 0000 9091 0000 		lds r25,real_mods
 520 0004 982B      		or r25,r24
 521 0006 9093 0000 		sts real_mods,r25
 522               	/* epilogue start */
 523               		.loc 2 271 50 view .LVU102
 524 000a 0895      		ret
 525               		.cfi_endproc
 526               	.LFE32:
 528               		.section	.text.del_mods,"ax",@progbits
 529               	.global	del_mods
 531               	del_mods:
 532               	.LVL18:
 533               	.LFB33:
 272:quantum/action_util.c **** /** \brief del mods
 273:quantum/action_util.c ****  *
 274:quantum/action_util.c ****  * FIXME: needs doc
 275:quantum/action_util.c ****  */
 276:quantum/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 534               		.loc 2 276 29 is_stmt 1 view -0
 535               		.cfi_startproc
 536               	/* prologue: function */
 537               	/* frame size = 0 */
 538               	/* stack size = 0 */
 539               	.L__stack_usage = 0
 540               		.loc 2 276 31 view .LVU104
 541               		.loc 2 276 41 is_stmt 0 view .LVU105
 542 0000 982F      		mov r25,r24
 543 0002 9095      		com r25
 544 0004 8091 0000 		lds r24,real_mods
 545               	.LVL19:
 546               		.loc 2 276 41 view .LVU106
 547 0008 8923      		and r24,r25
 548 000a 8093 0000 		sts real_mods,r24
 549               	/* epilogue start */
 550               		.loc 2 276 51 view .LVU107
 551 000e 0895      		ret
 552               		.cfi_endproc
 553               	.LFE33:
 555               		.section	.text.set_mods,"ax",@progbits
 556               	.global	set_mods
 558               	set_mods:
 559               	.LVL20:
 560               	.LFB34:
 277:quantum/action_util.c **** /** \brief set mods
 278:quantum/action_util.c ****  *
 279:quantum/action_util.c ****  * FIXME: needs doc
 280:quantum/action_util.c ****  */
 281:quantum/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 561               		.loc 2 281 29 is_stmt 1 view -0
 562               		.cfi_startproc
 563               	/* prologue: function */
 564               	/* frame size = 0 */
 565               	/* stack size = 0 */
 566               	.L__stack_usage = 0
 567               		.loc 2 281 31 view .LVU109
 568               		.loc 2 281 41 is_stmt 0 view .LVU110
 569 0000 8093 0000 		sts real_mods,r24
 570               	/* epilogue start */
 571               		.loc 2 281 49 view .LVU111
 572 0004 0895      		ret
 573               		.cfi_endproc
 574               	.LFE34:
 576               		.section	.text.clear_mods,"ax",@progbits
 577               	.global	clear_mods
 579               	clear_mods:
 580               	.LFB35:
 282:quantum/action_util.c **** /** \brief clear mods
 283:quantum/action_util.c ****  *
 284:quantum/action_util.c ****  * FIXME: needs doc
 285:quantum/action_util.c ****  */
 286:quantum/action_util.c **** void clear_mods(void) { real_mods = 0; }
 581               		.loc 2 286 23 is_stmt 1 view -0
 582               		.cfi_startproc
 583               	/* prologue: function */
 584               	/* frame size = 0 */
 585               	/* stack size = 0 */
 586               	.L__stack_usage = 0
 587               		.loc 2 286 25 view .LVU113
 588               		.loc 2 286 35 is_stmt 0 view .LVU114
 589 0000 1092 0000 		sts real_mods,__zero_reg__
 590               	/* epilogue start */
 591               		.loc 2 286 40 view .LVU115
 592 0004 0895      		ret
 593               		.cfi_endproc
 594               	.LFE35:
 596               		.section	.text.get_weak_mods,"ax",@progbits
 597               	.global	get_weak_mods
 599               	get_weak_mods:
 600               	.LFB36:
 287:quantum/action_util.c **** 
 288:quantum/action_util.c **** /** \brief get weak mods
 289:quantum/action_util.c ****  *
 290:quantum/action_util.c ****  * FIXME: needs doc
 291:quantum/action_util.c ****  */
 292:quantum/action_util.c **** uint8_t get_weak_mods(void) { return weak_mods; }
 601               		.loc 2 292 29 is_stmt 1 view -0
 602               		.cfi_startproc
 603               	/* prologue: function */
 604               	/* frame size = 0 */
 605               	/* stack size = 0 */
 606               	.L__stack_usage = 0
 607               		.loc 2 292 31 view .LVU117
 608               		.loc 2 292 49 is_stmt 0 view .LVU118
 609 0000 8091 0000 		lds r24,weak_mods
 610               	/* epilogue start */
 611 0004 0895      		ret
 612               		.cfi_endproc
 613               	.LFE36:
 615               		.section	.text.add_weak_mods,"ax",@progbits
 616               	.global	add_weak_mods
 618               	add_weak_mods:
 619               	.LVL21:
 620               	.LFB37:
 293:quantum/action_util.c **** /** \brief add weak mods
 294:quantum/action_util.c ****  *
 295:quantum/action_util.c ****  * FIXME: needs doc
 296:quantum/action_util.c ****  */
 297:quantum/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 621               		.loc 2 297 34 is_stmt 1 view -0
 622               		.cfi_startproc
 623               	/* prologue: function */
 624               	/* frame size = 0 */
 625               	/* stack size = 0 */
 626               	.L__stack_usage = 0
 627               		.loc 2 297 36 view .LVU120
 628               		.loc 2 297 46 is_stmt 0 view .LVU121
 629 0000 9091 0000 		lds r25,weak_mods
 630 0004 982B      		or r25,r24
 631 0006 9093 0000 		sts weak_mods,r25
 632               	/* epilogue start */
 633               		.loc 2 297 55 view .LVU122
 634 000a 0895      		ret
 635               		.cfi_endproc
 636               	.LFE37:
 638               		.section	.text.del_weak_mods,"ax",@progbits
 639               	.global	del_weak_mods
 641               	del_weak_mods:
 642               	.LVL22:
 643               	.LFB38:
 298:quantum/action_util.c **** /** \brief del weak mods
 299:quantum/action_util.c ****  *
 300:quantum/action_util.c ****  * FIXME: needs doc
 301:quantum/action_util.c ****  */
 302:quantum/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 644               		.loc 2 302 34 is_stmt 1 view -0
 645               		.cfi_startproc
 646               	/* prologue: function */
 647               	/* frame size = 0 */
 648               	/* stack size = 0 */
 649               	.L__stack_usage = 0
 650               		.loc 2 302 36 view .LVU124
 651               		.loc 2 302 46 is_stmt 0 view .LVU125
 652 0000 982F      		mov r25,r24
 653 0002 9095      		com r25
 654 0004 8091 0000 		lds r24,weak_mods
 655               	.LVL23:
 656               		.loc 2 302 46 view .LVU126
 657 0008 8923      		and r24,r25
 658 000a 8093 0000 		sts weak_mods,r24
 659               	/* epilogue start */
 660               		.loc 2 302 56 view .LVU127
 661 000e 0895      		ret
 662               		.cfi_endproc
 663               	.LFE38:
 665               		.section	.text.set_weak_mods,"ax",@progbits
 666               	.global	set_weak_mods
 668               	set_weak_mods:
 669               	.LVL24:
 670               	.LFB39:
 303:quantum/action_util.c **** /** \brief set weak mods
 304:quantum/action_util.c ****  *
 305:quantum/action_util.c ****  * FIXME: needs doc
 306:quantum/action_util.c ****  */
 307:quantum/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 671               		.loc 2 307 34 is_stmt 1 view -0
 672               		.cfi_startproc
 673               	/* prologue: function */
 674               	/* frame size = 0 */
 675               	/* stack size = 0 */
 676               	.L__stack_usage = 0
 677               		.loc 2 307 36 view .LVU129
 678               		.loc 2 307 46 is_stmt 0 view .LVU130
 679 0000 8093 0000 		sts weak_mods,r24
 680               	/* epilogue start */
 681               		.loc 2 307 54 view .LVU131
 682 0004 0895      		ret
 683               		.cfi_endproc
 684               	.LFE39:
 686               		.section	.text.clear_weak_mods,"ax",@progbits
 687               	.global	clear_weak_mods
 689               	clear_weak_mods:
 690               	.LFB40:
 308:quantum/action_util.c **** /** \brief clear weak mods
 309:quantum/action_util.c ****  *
 310:quantum/action_util.c ****  * FIXME: needs doc
 311:quantum/action_util.c ****  */
 312:quantum/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 691               		.loc 2 312 28 is_stmt 1 view -0
 692               		.cfi_startproc
 693               	/* prologue: function */
 694               	/* frame size = 0 */
 695               	/* stack size = 0 */
 696               	.L__stack_usage = 0
 697               		.loc 2 312 30 view .LVU133
 698               		.loc 2 312 40 is_stmt 0 view .LVU134
 699 0000 1092 0000 		sts weak_mods,__zero_reg__
 700               	/* epilogue start */
 701               		.loc 2 312 45 view .LVU135
 702 0004 0895      		ret
 703               		.cfi_endproc
 704               	.LFE40:
 706               		.section	.text.get_macro_mods,"ax",@progbits
 707               	.global	get_macro_mods
 709               	get_macro_mods:
 710               	.LFB41:
 313:quantum/action_util.c **** 
 314:quantum/action_util.c **** #ifdef KEY_OVERRIDE_ENABLE
 315:quantum/action_util.c **** /** \brief set weak mods used by key overrides. DO not call this manually
 316:quantum/action_util.c ****  */
 317:quantum/action_util.c **** void set_weak_override_mods(uint8_t mods) { weak_override_mods = mods; }
 318:quantum/action_util.c **** /** \brief clear weak mods used by key overrides. DO not call this manually
 319:quantum/action_util.c ****  */
 320:quantum/action_util.c **** void clear_weak_override_mods(void) { weak_override_mods = 0; }
 321:quantum/action_util.c **** 
 322:quantum/action_util.c **** /** \brief set suppressed mods used by key overrides. DO not call this manually
 323:quantum/action_util.c ****  */
 324:quantum/action_util.c **** void set_suppressed_override_mods(uint8_t mods) { suppressed_mods = mods; }
 325:quantum/action_util.c **** /** \brief clear suppressed mods used by key overrides. DO not call this manually
 326:quantum/action_util.c ****  */
 327:quantum/action_util.c **** void clear_suppressed_override_mods(void) { suppressed_mods = 0; }
 328:quantum/action_util.c **** #endif
 329:quantum/action_util.c **** 
 330:quantum/action_util.c **** /* macro modifier */
 331:quantum/action_util.c **** /** \brief get macro mods
 332:quantum/action_util.c ****  *
 333:quantum/action_util.c ****  * FIXME: needs doc
 334:quantum/action_util.c ****  */
 335:quantum/action_util.c **** uint8_t get_macro_mods(void) { return macro_mods; }
 711               		.loc 2 335 30 is_stmt 1 view -0
 712               		.cfi_startproc
 713               	/* prologue: function */
 714               	/* frame size = 0 */
 715               	/* stack size = 0 */
 716               	.L__stack_usage = 0
 717               		.loc 2 335 32 view .LVU137
 718               		.loc 2 335 51 is_stmt 0 view .LVU138
 719 0000 8091 0000 		lds r24,macro_mods
 720               	/* epilogue start */
 721 0004 0895      		ret
 722               		.cfi_endproc
 723               	.LFE41:
 725               		.section	.text.add_macro_mods,"ax",@progbits
 726               	.global	add_macro_mods
 728               	add_macro_mods:
 729               	.LVL25:
 730               	.LFB42:
 336:quantum/action_util.c **** /** \brief add macro mods
 337:quantum/action_util.c ****  *
 338:quantum/action_util.c ****  * FIXME: needs doc
 339:quantum/action_util.c ****  */
 340:quantum/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 731               		.loc 2 340 35 is_stmt 1 view -0
 732               		.cfi_startproc
 733               	/* prologue: function */
 734               	/* frame size = 0 */
 735               	/* stack size = 0 */
 736               	.L__stack_usage = 0
 737               		.loc 2 340 37 view .LVU140
 738               		.loc 2 340 48 is_stmt 0 view .LVU141
 739 0000 9091 0000 		lds r25,macro_mods
 740 0004 982B      		or r25,r24
 741 0006 9093 0000 		sts macro_mods,r25
 742               	/* epilogue start */
 743               		.loc 2 340 57 view .LVU142
 744 000a 0895      		ret
 745               		.cfi_endproc
 746               	.LFE42:
 748               		.section	.text.del_macro_mods,"ax",@progbits
 749               	.global	del_macro_mods
 751               	del_macro_mods:
 752               	.LVL26:
 753               	.LFB43:
 341:quantum/action_util.c **** /** \brief del macro mods
 342:quantum/action_util.c ****  *
 343:quantum/action_util.c ****  * FIXME: needs doc
 344:quantum/action_util.c ****  */
 345:quantum/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 754               		.loc 2 345 35 is_stmt 1 view -0
 755               		.cfi_startproc
 756               	/* prologue: function */
 757               	/* frame size = 0 */
 758               	/* stack size = 0 */
 759               	.L__stack_usage = 0
 760               		.loc 2 345 37 view .LVU144
 761               		.loc 2 345 48 is_stmt 0 view .LVU145
 762 0000 982F      		mov r25,r24
 763 0002 9095      		com r25
 764 0004 8091 0000 		lds r24,macro_mods
 765               	.LVL27:
 766               		.loc 2 345 48 view .LVU146
 767 0008 8923      		and r24,r25
 768 000a 8093 0000 		sts macro_mods,r24
 769               	/* epilogue start */
 770               		.loc 2 345 58 view .LVU147
 771 000e 0895      		ret
 772               		.cfi_endproc
 773               	.LFE43:
 775               		.section	.text.set_macro_mods,"ax",@progbits
 776               	.global	set_macro_mods
 778               	set_macro_mods:
 779               	.LVL28:
 780               	.LFB44:
 346:quantum/action_util.c **** /** \brief set macro mods
 347:quantum/action_util.c ****  *
 348:quantum/action_util.c ****  * FIXME: needs doc
 349:quantum/action_util.c ****  */
 350:quantum/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 781               		.loc 2 350 35 is_stmt 1 view -0
 782               		.cfi_startproc
 783               	/* prologue: function */
 784               	/* frame size = 0 */
 785               	/* stack size = 0 */
 786               	.L__stack_usage = 0
 787               		.loc 2 350 37 view .LVU149
 788               		.loc 2 350 48 is_stmt 0 view .LVU150
 789 0000 8093 0000 		sts macro_mods,r24
 790               	/* epilogue start */
 791               		.loc 2 350 56 view .LVU151
 792 0004 0895      		ret
 793               		.cfi_endproc
 794               	.LFE44:
 796               		.section	.text.clear_macro_mods,"ax",@progbits
 797               	.global	clear_macro_mods
 799               	clear_macro_mods:
 800               	.LFB45:
 351:quantum/action_util.c **** /** \brief clear macro mods
 352:quantum/action_util.c ****  *
 353:quantum/action_util.c ****  * FIXME: needs doc
 354:quantum/action_util.c ****  */
 355:quantum/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 801               		.loc 2 355 29 is_stmt 1 view -0
 802               		.cfi_startproc
 803               	/* prologue: function */
 804               	/* frame size = 0 */
 805               	/* stack size = 0 */
 806               	.L__stack_usage = 0
 807               		.loc 2 355 31 view .LVU153
 808               		.loc 2 355 42 is_stmt 0 view .LVU154
 809 0000 1092 0000 		sts macro_mods,__zero_reg__
 810               	/* epilogue start */
 811               		.loc 2 355 47 view .LVU155
 812 0004 0895      		ret
 813               		.cfi_endproc
 814               	.LFE45:
 816               		.section	.text.get_oneshot_mods,"ax",@progbits
 817               	.global	get_oneshot_mods
 819               	get_oneshot_mods:
 820               	.LFB46:
 356:quantum/action_util.c **** 
 357:quantum/action_util.c **** #ifndef NO_ACTION_ONESHOT
 358:quantum/action_util.c **** /** \brief get oneshot mods
 359:quantum/action_util.c ****  *
 360:quantum/action_util.c ****  * FIXME: needs doc
 361:quantum/action_util.c ****  */
 362:quantum/action_util.c **** uint8_t get_oneshot_mods(void) { return oneshot_mods; }
 821               		.loc 2 362 32 is_stmt 1 view -0
 822               		.cfi_startproc
 823               	/* prologue: function */
 824               	/* frame size = 0 */
 825               	/* stack size = 0 */
 826               	.L__stack_usage = 0
 827               		.loc 2 362 34 view .LVU157
 828               		.loc 2 362 55 is_stmt 0 view .LVU158
 829 0000 8091 0000 		lds r24,oneshot_mods
 830               	/* epilogue start */
 831 0004 0895      		ret
 832               		.cfi_endproc
 833               	.LFE46:
 835               		.section	.text.oneshot_locked_mods_changed_user,"ax",@progbits
 836               		.weak	oneshot_locked_mods_changed_user
 838               	oneshot_locked_mods_changed_user:
 839               	.LVL29:
 840               	.LFB51:
 363:quantum/action_util.c **** 
 364:quantum/action_util.c **** void add_oneshot_mods(uint8_t mods) {
 365:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 366:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 367:quantum/action_util.c ****         oneshot_time = timer_read();
 368:quantum/action_util.c **** #    endif
 369:quantum/action_util.c ****         oneshot_mods |= mods;
 370:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 371:quantum/action_util.c ****     }
 372:quantum/action_util.c **** }
 373:quantum/action_util.c **** 
 374:quantum/action_util.c **** void del_oneshot_mods(uint8_t mods) {
 375:quantum/action_util.c ****     if (oneshot_mods & mods) {
 376:quantum/action_util.c ****         oneshot_mods &= ~mods;
 377:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 378:quantum/action_util.c ****         oneshot_time = oneshot_mods ? timer_read() : 0;
 379:quantum/action_util.c **** #    endif
 380:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 381:quantum/action_util.c ****     }
 382:quantum/action_util.c **** }
 383:quantum/action_util.c **** 
 384:quantum/action_util.c **** /** \brief set oneshot mods
 385:quantum/action_util.c ****  *
 386:quantum/action_util.c ****  * FIXME: needs doc
 387:quantum/action_util.c ****  */
 388:quantum/action_util.c **** void set_oneshot_mods(uint8_t mods) {
 389:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 390:quantum/action_util.c ****         if (oneshot_mods != mods) {
 391:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 392:quantum/action_util.c ****             oneshot_time = timer_read();
 393:quantum/action_util.c **** #    endif
 394:quantum/action_util.c ****             oneshot_mods = mods;
 395:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 396:quantum/action_util.c ****         }
 397:quantum/action_util.c ****     }
 398:quantum/action_util.c **** }
 399:quantum/action_util.c **** 
 400:quantum/action_util.c **** /** \brief clear oneshot mods
 401:quantum/action_util.c ****  *
 402:quantum/action_util.c ****  * FIXME: needs doc
 403:quantum/action_util.c ****  */
 404:quantum/action_util.c **** void clear_oneshot_mods(void) {
 405:quantum/action_util.c ****     if (oneshot_mods) {
 406:quantum/action_util.c ****         oneshot_mods = 0;
 407:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 408:quantum/action_util.c ****         oneshot_time = 0;
 409:quantum/action_util.c **** #    endif
 410:quantum/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 411:quantum/action_util.c ****     }
 412:quantum/action_util.c **** }
 413:quantum/action_util.c **** #endif
 414:quantum/action_util.c **** 
 415:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 416:quantum/action_util.c ****  *
 417:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 418:quantum/action_util.c ****  */
 419:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_user(uint8_t mods) {}
 841               		.loc 2 419 75 is_stmt 1 view -0
 842               		.cfi_startproc
 843               	/* prologue: function */
 844               	/* frame size = 0 */
 845               	/* stack size = 0 */
 846               	.L__stack_usage = 0
 847               		.loc 2 419 76 view .LVU160
 848               	/* epilogue start */
 849 0000 0895      		ret
 850               		.cfi_endproc
 851               	.LFE51:
 853               		.set	oneshot_locked_mods_changed_user.localalias,oneshot_locked_mods_changed_user
 854               		.section	.text.oneshot_locked_mods_changed_kb,"ax",@progbits
 855               		.weak	oneshot_locked_mods_changed_kb
 857               	oneshot_locked_mods_changed_kb:
 858               	.LVL30:
 859               	.LFB52:
 420:quantum/action_util.c **** 
 421:quantum/action_util.c **** /** \brief Called when the locked one shot modifiers have been changed.
 422:quantum/action_util.c ****  *
 423:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 424:quantum/action_util.c ****  */
 425:quantum/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_kb(uint8_t mods) { oneshot_locked_mods_chang
 860               		.loc 2 425 73 view -0
 861               		.cfi_startproc
 862               	/* prologue: function */
 863               	/* frame size = 0 */
 864               	/* stack size = 0 */
 865               	.L__stack_usage = 0
 866               		.loc 2 425 75 view .LVU162
 867 0000 0C94 0000 		jmp oneshot_locked_mods_changed_user
 868               	.LVL31:
 869               		.loc 2 425 75 is_stmt 0 view .LVU163
 870               		.cfi_endproc
 871               	.LFE52:
 873               		.section	.text.set_oneshot_locked_mods,"ax",@progbits
 874               	.global	set_oneshot_locked_mods
 876               	set_oneshot_locked_mods:
 877               	.LVL32:
 878               	.LFB12:
  57:quantum/action_util.c ****     if (mods != oneshot_locked_mods) {
 879               		.loc 2 57 54 is_stmt 1 view -0
 880               		.cfi_startproc
 881               	/* prologue: function */
 882               	/* frame size = 0 */
 883               	/* stack size = 0 */
 884               	.L__stack_usage = 0
  58:quantum/action_util.c ****         oneshot_locked_mods = mods;
 885               		.loc 2 58 5 view .LVU165
  58:quantum/action_util.c ****         oneshot_locked_mods = mods;
 886               		.loc 2 58 8 is_stmt 0 view .LVU166
 887 0000 9091 0000 		lds r25,oneshot_locked_mods
 888 0004 9817      		cp r25,r24
 889 0006 01F0      		breq .L47
  59:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 890               		.loc 2 59 9 is_stmt 1 view .LVU167
  59:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 891               		.loc 2 59 29 is_stmt 0 view .LVU168
 892 0008 8093 0000 		sts oneshot_locked_mods,r24
  60:quantum/action_util.c ****     }
 893               		.loc 2 60 9 is_stmt 1 view .LVU169
 894 000c 0C94 0000 		jmp oneshot_locked_mods_changed_kb
 895               	.LVL33:
 896               	.L47:
 897               	/* epilogue start */
  62:quantum/action_util.c **** void clear_oneshot_locked_mods(void) {
 898               		.loc 2 62 1 is_stmt 0 view .LVU170
 899 0010 0895      		ret
 900               		.cfi_endproc
 901               	.LFE12:
 903               		.section	.text.clear_oneshot_locked_mods,"ax",@progbits
 904               	.global	clear_oneshot_locked_mods
 906               	clear_oneshot_locked_mods:
 907               	.LFB13:
  63:quantum/action_util.c ****     if (oneshot_locked_mods) {
 908               		.loc 2 63 38 is_stmt 1 view -0
 909               		.cfi_startproc
 910               	/* prologue: function */
 911               	/* frame size = 0 */
 912               	/* stack size = 0 */
 913               	.L__stack_usage = 0
  64:quantum/action_util.c ****         oneshot_locked_mods = 0;
 914               		.loc 2 64 5 view .LVU172
  64:quantum/action_util.c ****         oneshot_locked_mods = 0;
 915               		.loc 2 64 8 is_stmt 0 view .LVU173
 916 0000 8091 0000 		lds r24,oneshot_locked_mods
 917 0004 8823      		tst r24
 918 0006 01F0      		breq .L49
  65:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 919               		.loc 2 65 9 is_stmt 1 view .LVU174
  65:quantum/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 920               		.loc 2 65 29 is_stmt 0 view .LVU175
 921 0008 1092 0000 		sts oneshot_locked_mods,__zero_reg__
  66:quantum/action_util.c ****     }
 922               		.loc 2 66 9 is_stmt 1 view .LVU176
 923 000c 80E0      		ldi r24,0
 924 000e 0C94 0000 		jmp oneshot_locked_mods_changed_kb
 925               	.LVL34:
 926               	.L49:
 927               	/* epilogue start */
  68:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 928               		.loc 2 68 1 is_stmt 0 view .LVU177
 929 0012 0895      		ret
 930               		.cfi_endproc
 931               	.LFE13:
 933               		.section	.text.oneshot_mods_changed_user,"ax",@progbits
 934               		.weak	oneshot_mods_changed_user
 936               	oneshot_mods_changed_user:
 937               	.LFB59:
 938               		.cfi_startproc
 939               	/* prologue: function */
 940               	/* frame size = 0 */
 941               	/* stack size = 0 */
 942               	.L__stack_usage = 0
 943               	/* epilogue start */
 944 0000 0895      		ret
 945               		.cfi_endproc
 946               	.LFE59:
 948               		.section	.text.oneshot_mods_changed_kb,"ax",@progbits
 949               		.weak	oneshot_mods_changed_kb
 951               	oneshot_mods_changed_kb:
 952               	.LVL35:
 953               	.LFB54:
 426:quantum/action_util.c **** 
 427:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 428:quantum/action_util.c ****  *
 429:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 430:quantum/action_util.c ****  */
 431:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_user(uint8_t mods) {}
 432:quantum/action_util.c **** 
 433:quantum/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 434:quantum/action_util.c ****  *
 435:quantum/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 436:quantum/action_util.c ****  */
 437:quantum/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_kb(uint8_t mods) { oneshot_mods_changed_user(mods);
 954               		.loc 2 437 66 is_stmt 1 view -0
 955               		.cfi_startproc
 956               	/* prologue: function */
 957               	/* frame size = 0 */
 958               	/* stack size = 0 */
 959               	.L__stack_usage = 0
 960               		.loc 2 437 68 view .LVU179
 961 0000 0C94 0000 		jmp oneshot_mods_changed_user
 962               	.LVL36:
 963               		.loc 2 437 68 is_stmt 0 view .LVU180
 964               		.cfi_endproc
 965               	.LFE54:
 967               		.section	.text.add_oneshot_mods,"ax",@progbits
 968               	.global	add_oneshot_mods
 970               	add_oneshot_mods:
 971               	.LVL37:
 972               	.LFB47:
 364:quantum/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 973               		.loc 2 364 37 is_stmt 1 view -0
 974               		.cfi_startproc
 975               	/* prologue: function */
 976               	/* frame size = 0 */
 977               	/* stack size = 0 */
 978               	.L__stack_usage = 0
 365:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 979               		.loc 2 365 5 view .LVU182
 365:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 980               		.loc 2 365 31 is_stmt 0 view .LVU183
 981 0000 9091 0000 		lds r25,oneshot_mods
 982 0004 292F      		mov r18,r25
 983 0006 2823      		and r18,r24
 365:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 984               		.loc 2 365 8 view .LVU184
 985 0008 2817      		cp r18,r24
 986 000a 01F0      		breq .L53
 369:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 987               		.loc 2 369 9 is_stmt 1 view .LVU185
 369:quantum/action_util.c ****         oneshot_mods_changed_kb(mods);
 988               		.loc 2 369 22 is_stmt 0 view .LVU186
 989 000c 982B      		or r25,r24
 990 000e 9093 0000 		sts oneshot_mods,r25
 370:quantum/action_util.c ****     }
 991               		.loc 2 370 9 is_stmt 1 view .LVU187
 992 0012 0C94 0000 		jmp oneshot_mods_changed_kb
 993               	.LVL38:
 994               	.L53:
 995               	/* epilogue start */
 372:quantum/action_util.c **** 
 996               		.loc 2 372 1 is_stmt 0 view .LVU188
 997 0016 0895      		ret
 998               		.cfi_endproc
 999               	.LFE47:
 1001               		.section	.text.del_oneshot_mods,"ax",@progbits
 1002               	.global	del_oneshot_mods
 1004               	del_oneshot_mods:
 1005               	.LVL39:
 1006               	.LFB48:
 374:quantum/action_util.c ****     if (oneshot_mods & mods) {
 1007               		.loc 2 374 37 is_stmt 1 view -0
 1008               		.cfi_startproc
 1009               	/* prologue: function */
 1010               	/* frame size = 0 */
 1011               	/* stack size = 0 */
 1012               	.L__stack_usage = 0
 375:quantum/action_util.c ****         oneshot_mods &= ~mods;
 1013               		.loc 2 375 5 view .LVU190
 375:quantum/action_util.c ****         oneshot_mods &= ~mods;
 1014               		.loc 2 375 9 is_stmt 0 view .LVU191
 1015 0000 9091 0000 		lds r25,oneshot_mods
 1016 0004 292F      		mov r18,r25
 1017 0006 2823      		and r18,r24
 375:quantum/action_util.c ****         oneshot_mods &= ~mods;
 1018               		.loc 2 375 8 view .LVU192
 1019 0008 01F0      		breq .L55
 376:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1020               		.loc 2 376 9 is_stmt 1 view .LVU193
 376:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1021               		.loc 2 376 22 is_stmt 0 view .LVU194
 1022 000a 8095      		com r24
 1023               	.LVL40:
 376:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1024               		.loc 2 376 22 view .LVU195
 1025 000c 8923      		and r24,r25
 1026               	.LVL41:
 376:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1027               		.loc 2 376 22 view .LVU196
 1028 000e 8093 0000 		sts oneshot_mods,r24
 380:quantum/action_util.c ****     }
 1029               		.loc 2 380 9 is_stmt 1 view .LVU197
 1030 0012 0C94 0000 		jmp oneshot_mods_changed_kb
 1031               	.LVL42:
 1032               	.L55:
 1033               	/* epilogue start */
 382:quantum/action_util.c **** 
 1034               		.loc 2 382 1 is_stmt 0 view .LVU198
 1035 0016 0895      		ret
 1036               		.cfi_endproc
 1037               	.LFE48:
 1039               		.section	.text.set_oneshot_mods,"ax",@progbits
 1040               	.global	set_oneshot_mods
 1042               	set_oneshot_mods:
 1043               	.LVL43:
 1044               	.LFB49:
 388:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1045               		.loc 2 388 37 is_stmt 1 view -0
 1046               		.cfi_startproc
 1047               	/* prologue: function */
 1048               	/* frame size = 0 */
 1049               	/* stack size = 0 */
 1050               	.L__stack_usage = 0
 389:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1051               		.loc 2 389 5 view .LVU200
 389:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1052               		.loc 2 389 23 is_stmt 0 view .LVU201
 1053 0000 9091 0000 		lds r25,keymap_config+1
 389:quantum/action_util.c ****         if (oneshot_mods != mods) {
 1054               		.loc 2 389 8 view .LVU202
 1055 0004 92FD      		sbrc r25,2
 1056 0006 00C0      		rjmp .L57
 390:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1057               		.loc 2 390 9 is_stmt 1 view .LVU203
 390:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1058               		.loc 2 390 12 is_stmt 0 view .LVU204
 1059 0008 9091 0000 		lds r25,oneshot_mods
 1060 000c 9817      		cp r25,r24
 1061 000e 01F0      		breq .L57
 394:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 1062               		.loc 2 394 13 is_stmt 1 view .LVU205
 394:quantum/action_util.c ****             oneshot_mods_changed_kb(mods);
 1063               		.loc 2 394 26 is_stmt 0 view .LVU206
 1064 0010 8093 0000 		sts oneshot_mods,r24
 395:quantum/action_util.c ****         }
 1065               		.loc 2 395 13 is_stmt 1 view .LVU207
 1066 0014 0C94 0000 		jmp oneshot_mods_changed_kb
 1067               	.LVL44:
 1068               	.L57:
 1069               	/* epilogue start */
 398:quantum/action_util.c **** 
 1070               		.loc 2 398 1 is_stmt 0 view .LVU208
 1071 0018 0895      		ret
 1072               		.cfi_endproc
 1073               	.LFE49:
 1075               		.section	.text.clear_oneshot_mods,"ax",@progbits
 1076               	.global	clear_oneshot_mods
 1078               	clear_oneshot_mods:
 1079               	.LFB50:
 404:quantum/action_util.c ****     if (oneshot_mods) {
 1080               		.loc 2 404 31 is_stmt 1 view -0
 1081               		.cfi_startproc
 1082               	/* prologue: function */
 1083               	/* frame size = 0 */
 1084               	/* stack size = 0 */
 1085               	.L__stack_usage = 0
 405:quantum/action_util.c ****         oneshot_mods = 0;
 1086               		.loc 2 405 5 view .LVU210
 405:quantum/action_util.c ****         oneshot_mods = 0;
 1087               		.loc 2 405 8 is_stmt 0 view .LVU211
 1088 0000 8091 0000 		lds r24,oneshot_mods
 1089 0004 8823      		tst r24
 1090 0006 01F0      		breq .L59
 406:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1091               		.loc 2 406 9 is_stmt 1 view .LVU212
 406:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1092               		.loc 2 406 22 is_stmt 0 view .LVU213
 1093 0008 1092 0000 		sts oneshot_mods,__zero_reg__
 410:quantum/action_util.c ****     }
 1094               		.loc 2 410 9 is_stmt 1 view .LVU214
 1095 000c 80E0      		ldi r24,0
 1096 000e 0C94 0000 		jmp oneshot_mods_changed_kb
 1097               	.LVL45:
 1098               	.L59:
 1099               	/* epilogue start */
 412:quantum/action_util.c **** #endif
 1100               		.loc 2 412 1 is_stmt 0 view .LVU215
 1101 0012 0895      		ret
 1102               		.cfi_endproc
 1103               	.LFE50:
 1105               		.section	.text.send_keyboard_report,"ax",@progbits
 1106               	.global	send_keyboard_report
 1108               	send_keyboard_report:
 1109               	.LFB30:
 232:quantum/action_util.c ****     keyboard_report->mods = real_mods;
 1110               		.loc 2 232 33 is_stmt 1 view -0
 1111               		.cfi_startproc
 1112               	/* prologue: function */
 1113               	/* frame size = 0 */
 1114               	/* stack size = 0 */
 1115               	.L__stack_usage = 0
 233:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1116               		.loc 2 233 5 view .LVU217
 233:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1117               		.loc 2 233 20 is_stmt 0 view .LVU218
 1118 0000 E091 0000 		lds r30,keyboard_report
 1119 0004 F091 0000 		lds r31,keyboard_report+1
 233:quantum/action_util.c ****     keyboard_report->mods |= weak_mods;
 1120               		.loc 2 233 27 view .LVU219
 1121 0008 8091 0000 		lds r24,real_mods
 1122 000c 8083      		st Z,r24
 234:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1123               		.loc 2 234 5 is_stmt 1 view .LVU220
 234:quantum/action_util.c ****     keyboard_report->mods |= macro_mods;
 1124               		.loc 2 234 27 is_stmt 0 view .LVU221
 1125 000e E091 0000 		lds r30,keyboard_report
 1126 0012 F091 0000 		lds r31,keyboard_report+1
 1127 0016 8081      		ld r24,Z
 1128 0018 9091 0000 		lds r25,weak_mods
 1129 001c 892B      		or r24,r25
 1130 001e 8083      		st Z,r24
 235:quantum/action_util.c **** 
 1131               		.loc 2 235 5 is_stmt 1 view .LVU222
 235:quantum/action_util.c **** 
 1132               		.loc 2 235 27 is_stmt 0 view .LVU223
 1133 0020 E091 0000 		lds r30,keyboard_report
 1134 0024 F091 0000 		lds r31,keyboard_report+1
 1135 0028 8081      		ld r24,Z
 1136 002a 9091 0000 		lds r25,macro_mods
 1137 002e 892B      		or r24,r25
 1138 0030 8083      		st Z,r24
 238:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1139               		.loc 2 238 5 is_stmt 1 view .LVU224
 238:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1140               		.loc 2 238 9 is_stmt 0 view .LVU225
 1141 0032 9091 0000 		lds r25,oneshot_mods
 238:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1142               		.loc 2 238 8 view .LVU226
 1143 0036 9923      		tst r25
 1144 0038 01F0      		breq .L63
 245:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 1145               		.loc 2 245 9 is_stmt 1 view .LVU227
 245:quantum/action_util.c ****         if (has_anykey(keyboard_report)) {
 1146               		.loc 2 245 31 is_stmt 0 view .LVU228
 1147 003a E091 0000 		lds r30,keyboard_report
 1148 003e F091 0000 		lds r31,keyboard_report+1
 1149 0042 8081      		ld r24,Z
 1150 0044 892B      		or r24,r25
 1151 0046 8083      		st Z,r24
 246:quantum/action_util.c ****             clear_oneshot_mods();
 1152               		.loc 2 246 9 is_stmt 1 view .LVU229
 246:quantum/action_util.c ****             clear_oneshot_mods();
 1153               		.loc 2 246 13 is_stmt 0 view .LVU230
 1154 0048 8091 0000 		lds r24,keyboard_report
 1155 004c 9091 0000 		lds r25,keyboard_report+1
 1156 0050 0E94 0000 		call has_anykey
 1157               	.LVL46:
 246:quantum/action_util.c ****             clear_oneshot_mods();
 1158               		.loc 2 246 12 view .LVU231
 1159 0054 8111      		cpse r24,__zero_reg__
 247:quantum/action_util.c ****         }
 1160               		.loc 2 247 13 is_stmt 1 view .LVU232
 1161 0056 0E94 0000 		call clear_oneshot_mods
 1162               	.LVL47:
 1163               	.L63:
 259:quantum/action_util.c **** }
 1164               		.loc 2 259 5 view .LVU233
 1165 005a 8091 0000 		lds r24,keyboard_report
 1166 005e 9091 0000 		lds r25,keyboard_report+1
 1167 0062 0C94 0000 		jmp host_keyboard_send
 1168               	.LVL48:
 1169               		.cfi_endproc
 1170               	.LFE30:
 1172               		.section	.text.oneshot_layer_changed_user,"ax",@progbits
 1173               		.weak	oneshot_layer_changed_user
 1175               	oneshot_layer_changed_user:
 1176               	.LFB61:
 1177               		.cfi_startproc
 1178               	/* prologue: function */
 1179               	/* frame size = 0 */
 1180               	/* stack size = 0 */
 1181               	.L__stack_usage = 0
 1182               	/* epilogue start */
 1183 0000 0895      		ret
 1184               		.cfi_endproc
 1185               	.LFE61:
 1187               		.section	.text.oneshot_layer_changed_kb,"ax",@progbits
 1188               		.weak	oneshot_layer_changed_kb
 1190               	oneshot_layer_changed_kb:
 1191               	.LVL49:
 1192               	.LFB56:
 438:quantum/action_util.c **** 
 439:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 440:quantum/action_util.c ****  *
 441:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 442:quantum/action_util.c ****  */
 443:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_user(uint8_t layer) {}
 444:quantum/action_util.c **** 
 445:quantum/action_util.c **** /** \brief Called when the one shot layers have been changed.
 446:quantum/action_util.c ****  *
 447:quantum/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 448:quantum/action_util.c ****  */
 449:quantum/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_kb(uint8_t layer) { oneshot_layer_changed_user(lay
 1193               		.loc 2 449 68 view -0
 1194               		.cfi_startproc
 1195               	/* prologue: function */
 1196               	/* frame size = 0 */
 1197               	/* stack size = 0 */
 1198               	.L__stack_usage = 0
 1199               		.loc 2 449 70 view .LVU235
 1200 0000 0C94 0000 		jmp oneshot_layer_changed_user
 1201               	.LVL50:
 1202               		.loc 2 449 70 is_stmt 0 view .LVU236
 1203               		.cfi_endproc
 1204               	.LFE56:
 1206               		.section	.text.set_oneshot_layer,"ax",@progbits
 1207               	.global	set_oneshot_layer
 1209               	set_oneshot_layer:
 1210               	.LVL51:
 1211               	.LFB21:
 153:quantum/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1212               		.loc 2 153 54 is_stmt 1 view -0
 1213               		.cfi_startproc
 1214               	/* prologue: function */
 1215               	/* frame size = 0 */
 1216               	/* stack size = 0 */
 1217               	.L__stack_usage = 0
 154:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1218               		.loc 2 154 5 view .LVU238
 154:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1219               		.loc 2 154 23 is_stmt 0 view .LVU239
 1220 0000 9091 0000 		lds r25,keymap_config+1
 154:quantum/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1221               		.loc 2 154 8 view .LVU240
 1222 0004 92FD      		sbrc r25,2
 1223 0006 00C0      		rjmp .L71
 155:quantum/action_util.c ****         layer_on(layer);
 1224               		.loc 2 155 9 is_stmt 1 view .LVU241
 155:quantum/action_util.c ****         layer_on(layer);
 1225               		.loc 2 155 36 is_stmt 0 view .LVU242
 1226 0008 98E0      		ldi r25,lo8(8)
 1227 000a 899F      		mul r24,r25
 1228 000c 9001      		movw r18,r0
 1229 000e 1124      		clr __zero_reg__
 155:quantum/action_util.c ****         layer_on(layer);
 1230               		.loc 2 155 41 view .LVU243
 1231 0010 622B      		or r22,r18
 1232               	.LVL52:
 155:quantum/action_util.c ****         layer_on(layer);
 1233               		.loc 2 155 28 view .LVU244
 1234 0012 6093 0000 		sts oneshot_layer_data,r22
 156:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1235               		.loc 2 156 9 is_stmt 1 view .LVU245
 1236 0016 0E94 0000 		call layer_on
 1237               	.LVL53:
 160:quantum/action_util.c ****     } else {
 1238               		.loc 2 160 9 view .LVU246
 1239               	.LBB15:
 1240               	.LBI15:
  87:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1241               		.loc 2 87 16 view .LVU247
 1242               	.LBB16:
  87:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1243               		.loc 2 87 42 view .LVU248
  87:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1244               		.loc 2 87 68 is_stmt 0 view .LVU249
 1245 001a 8091 0000 		lds r24,oneshot_layer_data
 1246               	.LBE16:
 1247               	.LBE15:
 160:quantum/action_util.c ****     } else {
 1248               		.loc 2 160 9 view .LVU250
 1249 001e 8595      		asr r24
 1250 0020 8595      		asr r24
 1251 0022 8595      		asr r24
 1252 0024 0C94 0000 		jmp oneshot_layer_changed_kb
 1253               	.LVL54:
 1254               	.L71:
 162:quantum/action_util.c ****     }
 1255               		.loc 2 162 9 is_stmt 1 view .LVU251
 1256 0028 0C94 0000 		jmp layer_on
 1257               	.LVL55:
 162:quantum/action_util.c ****     }
 1258               		.loc 2 162 9 is_stmt 0 view .LVU252
 1259               		.cfi_endproc
 1260               	.LFE21:
 1262               		.section	.text.reset_oneshot_layer,"ax",@progbits
 1263               	.global	reset_oneshot_layer
 1265               	reset_oneshot_layer:
 1266               	.LFB22:
 169:quantum/action_util.c ****     oneshot_layer_data = 0;
 1267               		.loc 2 169 32 is_stmt 1 view -0
 1268               		.cfi_startproc
 1269               	/* prologue: function */
 1270               	/* frame size = 0 */
 1271               	/* stack size = 0 */
 1272               	.L__stack_usage = 0
 170:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1273               		.loc 2 170 5 view .LVU254
 170:quantum/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1274               		.loc 2 170 24 is_stmt 0 view .LVU255
 1275 0000 1092 0000 		sts oneshot_layer_data,__zero_reg__
 174:quantum/action_util.c **** }
 1276               		.loc 2 174 5 is_stmt 1 view .LVU256
 1277 0004 80E0      		ldi r24,0
 1278 0006 0C94 0000 		jmp oneshot_layer_changed_kb
 1279               	.LVL56:
 1280               		.cfi_endproc
 1281               	.LFE22:
 1283               		.section	.text.clear_oneshot_layer_state,"ax",@progbits
 1284               	.global	clear_oneshot_layer_state
 1286               	clear_oneshot_layer_state:
 1287               	.LVL57:
 1288               	.LFB23:
 180:quantum/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 1289               		.loc 2 180 62 view -0
 1290               		.cfi_startproc
 1291               	/* prologue: function */
 1292               	/* frame size = 0 */
 1293               	/* stack size = 0 */
 1294               	.L__stack_usage = 0
 181:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1295               		.loc 2 181 5 view .LVU258
 181:quantum/action_util.c ****     oneshot_layer_data &= ~state;
 1296               		.loc 2 181 13 is_stmt 0 view .LVU259
 1297 0000 9091 0000 		lds r25,oneshot_layer_data
 1298               	.LVL58:
 182:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1299               		.loc 2 182 5 is_stmt 1 view .LVU260
 182:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1300               		.loc 2 182 24 is_stmt 0 view .LVU261
 1301 0004 8095      		com r24
 1302               	.LVL59:
 182:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1303               		.loc 2 182 24 view .LVU262
 1304 0006 8923      		and r24,r25
 1305               	.LVL60:
 182:quantum/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1306               		.loc 2 182 24 view .LVU263
 1307 0008 8093 0000 		sts oneshot_layer_data,r24
 183:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1308               		.loc 2 183 5 is_stmt 1 view .LVU264
 1309               	.LBB17:
 1310               	.LBI17:
  88:quantum/action_util.c **** 
 1311               		.loc 2 88 16 view .LVU265
 1312               	.LBB18:
  88:quantum/action_util.c **** 
 1313               		.loc 2 88 48 view .LVU266
  88:quantum/action_util.c **** 
 1314               		.loc 2 88 74 is_stmt 0 view .LVU267
 1315 000c 282F      		mov r18,r24
 1316 000e 2770      		andi r18,lo8(7)
 1317               	.LBE18:
 1318               	.LBE17:
 183:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1319               		.loc 2 183 8 view .LVU268
 1320 0010 01F4      		brne .L74
 183:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1321               		.loc 2 183 52 discriminator 1 view .LVU269
 1322 0012 282F      		mov r18,r24
 1323 0014 082E      		mov __tmp_reg__,r24
 1324 0016 000C      		lsl r0
 1325 0018 330B      		sbc r19,r19
 183:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1326               		.loc 2 183 37 discriminator 1 view .LVU270
 1327 001a 9217      		cp r25,r18
 1328 001c 1306      		cpc __zero_reg__,r19
 1329 001e 01F4      		brne .L75
 1330               	.L74:
 183:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1331               		.loc 2 183 75 discriminator 3 view .LVU271
 1332 0020 9091 0000 		lds r25,keymap_config+1
 1333               	.LVL61:
 183:quantum/action_util.c ****         layer_off(get_oneshot_layer());
 1334               		.loc 2 183 75 discriminator 3 view .LVU272
 1335 0024 92FF      		sbrs r25,2
 1336 0026 00C0      		rjmp .L73
 1337               	.L75:
 184:quantum/action_util.c ****         reset_oneshot_layer();
 1338               		.loc 2 184 9 is_stmt 1 view .LVU273
 1339               	.LBB19:
 1340               	.LBI19:
  87:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1341               		.loc 2 87 16 view .LVU274
 1342               	.LBB20:
  87:quantum/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1343               		.loc 2 87 42 view .LVU275
 1344               	.LBE20:
 1345               	.LBE19:
 184:quantum/action_util.c ****         reset_oneshot_layer();
 1346               		.loc 2 184 9 is_stmt 0 view .LVU276
 1347 0028 8595      		asr r24
 1348 002a 8595      		asr r24
 1349 002c 8595      		asr r24
 1350 002e 0E94 0000 		call layer_off
 1351               	.LVL62:
 185:quantum/action_util.c ****     }
 1352               		.loc 2 185 9 is_stmt 1 view .LVU277
 1353 0032 0C94 0000 		jmp reset_oneshot_layer
 1354               	.LVL63:
 1355               	.L73:
 1356               	/* epilogue start */
 187:quantum/action_util.c **** /** \brief Is oneshot layer active
 1357               		.loc 2 187 1 is_stmt 0 view .LVU278
 1358 0036 0895      		ret
 1359               		.cfi_endproc
 1360               	.LFE23:
 1362               		.section	.text.has_anymod,"ax",@progbits
 1363               	.global	has_anymod
 1365               	has_anymod:
 1366               	.LFB57:
 450:quantum/action_util.c **** 
 451:quantum/action_util.c **** /** \brief inspect keyboard state
 452:quantum/action_util.c ****  *
 453:quantum/action_util.c ****  * FIXME: needs doc
 454:quantum/action_util.c ****  */
 455:quantum/action_util.c **** uint8_t has_anymod(void) { return bitpop(real_mods); }
 1367               		.loc 2 455 26 is_stmt 1 view -0
 1368               		.cfi_startproc
 1369               	/* prologue: function */
 1370               	/* frame size = 0 */
 1371               	/* stack size = 0 */
 1372               	.L__stack_usage = 0
 1373               		.loc 2 455 28 view .LVU280
 1374               		.loc 2 455 35 is_stmt 0 view .LVU281
 1375 0000 8091 0000 		lds r24,real_mods
 1376 0004 0C94 0000 		jmp bitpop
 1377               	.LVL64:
 1378               		.cfi_endproc
 1379               	.LFE57:
 1381               		.section	.progmem.data.__c.0,"a"
 1384               	__c.0:
 1385 0000 4F6E 6573 		.string	"Oneshot: active: %d\n"
 1385      686F 743A 
 1385      2061 6374 
 1385      6976 653A 
 1385      2025 640A 
 1386               	.global	swap_hands_oneshot
 1387               		.section	.bss.swap_hands_oneshot,"aw",@nobits
 1390               	swap_hands_oneshot:
 1391 0000 00        		.zero	1
 1392               		.section	.bss.oneshot_layer_data,"aw",@nobits
 1395               	oneshot_layer_data:
 1396 0000 00        		.zero	1
 1397               		.section	.bss.oneshot_locked_mods,"aw",@nobits
 1400               	oneshot_locked_mods:
 1401 0000 00        		.zero	1
 1402               		.section	.bss.oneshot_mods,"aw",@nobits
 1405               	oneshot_mods:
 1406 0000 00        		.zero	1
 1407               	.global	keyboard_report
 1408               		.section	.data.keyboard_report,"aw"
 1411               	keyboard_report:
 1412 0000 0000      		.word	__compound_literal.0
 1413               		.section	.bss.__compound_literal.0,"aw",@nobits
 1416               	__compound_literal.0:
 1417 0000 0000 0000 		.zero	8
 1417      0000 0000 
 1418               		.section	.bss.macro_mods,"aw",@nobits
 1421               	macro_mods:
 1422 0000 00        		.zero	1
 1423               		.section	.bss.weak_mods,"aw",@nobits
 1426               	weak_mods:
 1427 0000 00        		.zero	1
 1428               		.section	.bss.real_mods,"aw",@nobits
 1431               	real_mods:
 1432 0000 00        		.zero	1
 1433               		.text
 1434               	.Letext0:
 1435               		.file 3 "/usr/avr/include/stdint.h"
 1436               		.file 4 "tmk_core/common/report.h"
 1437               		.file 5 "quantum/logging/debug.h"
 1438               		.file 6 "quantum/action.h"
 1439               		.file 7 "quantum/keycode_config.h"
 1440               		.file 8 "quantum/bitwise.h"
 1441               		.file 9 "tmk_core/common/host.h"
 1442               		.file 10 "tmk_core/common/avr/xprintf.h"
 1443               		.file 11 "quantum/eeconfig.h"
 1444               		.file 12 "quantum/action_layer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_util.c
     /tmp/ccGtoPWH.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccGtoPWH.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccGtoPWH.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccGtoPWH.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccGtoPWH.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccGtoPWH.s:13     .text.add_key:0000000000000000 add_key
     /tmp/ccGtoPWH.s:1411   .data.keyboard_report:0000000000000000 keyboard_report
     /tmp/ccGtoPWH.s:39     .text.del_key:0000000000000000 del_key
     /tmp/ccGtoPWH.s:64     .text.clear_keys:0000000000000000 clear_keys
     /tmp/ccGtoPWH.s:83     .text.get_oneshot_locked_mods:0000000000000000 get_oneshot_locked_mods
     /tmp/ccGtoPWH.s:1400   .bss.oneshot_locked_mods:0000000000000000 oneshot_locked_mods
     /tmp/ccGtoPWH.s:103    .text.has_oneshot_mods_timed_out:0000000000000000 has_oneshot_mods_timed_out
     /tmp/ccGtoPWH.s:122    .text.get_oneshot_layer:0000000000000000 get_oneshot_layer
     /tmp/ccGtoPWH.s:1395   .bss.oneshot_layer_data:0000000000000000 oneshot_layer_data
     /tmp/ccGtoPWH.s:145    .text.get_oneshot_layer_state:0000000000000000 get_oneshot_layer_state
     /tmp/ccGtoPWH.s:166    .text.set_oneshot_swaphands:0000000000000000 set_oneshot_swaphands
     /tmp/ccGtoPWH.s:1390   .bss.swap_hands_oneshot:0000000000000000 swap_hands_oneshot
     /tmp/ccGtoPWH.s:191    .text.clear_oneshot_swaphands:0000000000000000 clear_oneshot_swaphands
     /tmp/ccGtoPWH.s:214    .text.release_oneshot_swaphands:0000000000000000 release_oneshot_swaphands
     /tmp/ccGtoPWH.s:252    .text.use_oneshot_swaphands:0000000000000000 use_oneshot_swaphands
     /tmp/ccGtoPWH.s:290    .text.is_oneshot_layer_active:0000000000000000 is_oneshot_layer_active
     /tmp/ccGtoPWH.s:323    .text.oneshot_set:0000000000000000 oneshot_set
     /tmp/ccGtoPWH.s:1384   .progmem.data.__c.0:0000000000000000 __c.0
     /tmp/ccGtoPWH.s:405    .text.oneshot_toggle:0000000000000000 oneshot_toggle
     /tmp/ccGtoPWH.s:430    .text.oneshot_enable:0000000000000000 oneshot_enable
     /tmp/ccGtoPWH.s:448    .text.oneshot_disable:0000000000000000 oneshot_disable
     /tmp/ccGtoPWH.s:466    .text.is_oneshot_enabled:0000000000000000 is_oneshot_enabled
     /tmp/ccGtoPWH.s:489    .text.get_mods:0000000000000000 get_mods
     /tmp/ccGtoPWH.s:1431   .bss.real_mods:0000000000000000 real_mods
     /tmp/ccGtoPWH.s:508    .text.add_mods:0000000000000000 add_mods
     /tmp/ccGtoPWH.s:531    .text.del_mods:0000000000000000 del_mods
     /tmp/ccGtoPWH.s:558    .text.set_mods:0000000000000000 set_mods
     /tmp/ccGtoPWH.s:579    .text.clear_mods:0000000000000000 clear_mods
     /tmp/ccGtoPWH.s:599    .text.get_weak_mods:0000000000000000 get_weak_mods
     /tmp/ccGtoPWH.s:1426   .bss.weak_mods:0000000000000000 weak_mods
     /tmp/ccGtoPWH.s:618    .text.add_weak_mods:0000000000000000 add_weak_mods
     /tmp/ccGtoPWH.s:641    .text.del_weak_mods:0000000000000000 del_weak_mods
     /tmp/ccGtoPWH.s:668    .text.set_weak_mods:0000000000000000 set_weak_mods
     /tmp/ccGtoPWH.s:689    .text.clear_weak_mods:0000000000000000 clear_weak_mods
     /tmp/ccGtoPWH.s:709    .text.get_macro_mods:0000000000000000 get_macro_mods
     /tmp/ccGtoPWH.s:1421   .bss.macro_mods:0000000000000000 macro_mods
     /tmp/ccGtoPWH.s:728    .text.add_macro_mods:0000000000000000 add_macro_mods
     /tmp/ccGtoPWH.s:751    .text.del_macro_mods:0000000000000000 del_macro_mods
     /tmp/ccGtoPWH.s:778    .text.set_macro_mods:0000000000000000 set_macro_mods
     /tmp/ccGtoPWH.s:799    .text.clear_macro_mods:0000000000000000 clear_macro_mods
     /tmp/ccGtoPWH.s:819    .text.get_oneshot_mods:0000000000000000 get_oneshot_mods
     /tmp/ccGtoPWH.s:1405   .bss.oneshot_mods:0000000000000000 oneshot_mods
     /tmp/ccGtoPWH.s:838    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user
     /tmp/ccGtoPWH.s:838    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user.localalias
     /tmp/ccGtoPWH.s:857    .text.oneshot_locked_mods_changed_kb:0000000000000000 oneshot_locked_mods_changed_kb
     /tmp/ccGtoPWH.s:876    .text.set_oneshot_locked_mods:0000000000000000 set_oneshot_locked_mods
     /tmp/ccGtoPWH.s:906    .text.clear_oneshot_locked_mods:0000000000000000 clear_oneshot_locked_mods
     /tmp/ccGtoPWH.s:936    .text.oneshot_mods_changed_user:0000000000000000 oneshot_mods_changed_user
     /tmp/ccGtoPWH.s:951    .text.oneshot_mods_changed_kb:0000000000000000 oneshot_mods_changed_kb
     /tmp/ccGtoPWH.s:970    .text.add_oneshot_mods:0000000000000000 add_oneshot_mods
     /tmp/ccGtoPWH.s:1004   .text.del_oneshot_mods:0000000000000000 del_oneshot_mods
     /tmp/ccGtoPWH.s:1042   .text.set_oneshot_mods:0000000000000000 set_oneshot_mods
     /tmp/ccGtoPWH.s:1078   .text.clear_oneshot_mods:0000000000000000 clear_oneshot_mods
     /tmp/ccGtoPWH.s:1108   .text.send_keyboard_report:0000000000000000 send_keyboard_report
     /tmp/ccGtoPWH.s:1175   .text.oneshot_layer_changed_user:0000000000000000 oneshot_layer_changed_user
     /tmp/ccGtoPWH.s:1190   .text.oneshot_layer_changed_kb:0000000000000000 oneshot_layer_changed_kb
     /tmp/ccGtoPWH.s:1209   .text.set_oneshot_layer:0000000000000000 set_oneshot_layer
     /tmp/ccGtoPWH.s:1265   .text.reset_oneshot_layer:0000000000000000 reset_oneshot_layer
     /tmp/ccGtoPWH.s:1286   .text.clear_oneshot_layer_state:0000000000000000 clear_oneshot_layer_state
     /tmp/ccGtoPWH.s:1365   .text.has_anymod:0000000000000000 has_anymod
     /tmp/ccGtoPWH.s:1416   .bss.__compound_literal.0:0000000000000000 __compound_literal.0

UNDEFINED SYMBOLS
add_key_to_report
del_key_from_report
clear_keys_from_report
swap_hands
keymap_config
eeconfig_update_keymap
debug_config
__xprintf
has_anykey
host_keyboard_send
layer_on
layer_off
bitpop
__do_copy_data
__do_clear_bss
